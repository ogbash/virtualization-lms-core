-- full graph
TP(Sym(2),NumericPlus(Sym(1),Const(1)))
TP(Sym(3),NumericTimes(Sym(2),Sym(1)))
TP(Sym(4),NumericTimes(Sym(1),Sym(3)))
TP(Sym(5),SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(4)))))
TP(Sym(6),ArrayLength(Sym(5)))
TP(Sym(8),OrderingGT(Sym(7),Const(50)))
TP(Sym(9),OrderingGT(Sym(7),Const(60)))
TP(Sym(10),SimpleLoop(Sym(6),Sym(7),ArrayIfElem(Sym(8),Block(Sym(9)))))
TP(Sym(11),ArrayLength(Sym(10)))
TP(Sym(12),Reflect(Print(Sym(11)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(13),Reify(Sym(12),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(12))))

-- before transformation
var x5 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
val x3 = x2 * x1
val x4 = x1 * x3
x5(x1) = x4
}
val x6 = x5.length
var x10 = new ArrayBuilder[Boolean]
for (x7 <- 0 until x6) {
val x8 = x7 > 50
val x9 = x7 > 60
if (x8) x10 += x9
}
val x11 = x10.length
val x12 = println(x11)

-- vertical transformation
(VFT) No producers found for TP(Sym(5),SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(4)))))
(VFT) No producers found for TP(Sym(10),SimpleLoop(Sym(6),Sym(7),ArrayIfElem(Sym(8),Block(Sym(9)))))

-- after vertical transformation
var x14 = new ArrayBuilder[Boolean]
for (x7 <- 0 until 100) {
val x8 = x7 > 50
val x9 = x7 > 60
if (x8) x14 += x9
}
val x15 = x14.length
val x16 = println(x15)

-- horizontal transformation
(HFT)  Recording new loop (prev. Sym(14)): (Const(100),(Sym(14),Sym(7),None))

-- after horizontal transformation
var x14 = new ArrayBuilder[Boolean]
for (x7 <- 0 until 100) {
val x8 = x7 > 50
val x9 = x7 > 60
if (x8) x14 += x9
}
val x15 = x14.length
val x16 = println(x15)
-- done
