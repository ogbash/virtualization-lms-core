-- full graph
TP(Sym(2),NumericPlus(Sym(1),Const(1)))
TP(Sym(3),SimpleLoop(Const(100),Sym(1),ArrayElem(Block(Sym(2)))))
TP(Sym(6),NumericPlus(Sym(5),Sym(4)))
TP(Sym(7),SimpleLoop(Const(80),Sym(5),ArrayElem(Block(Sym(6)))))
TP(Sym(8),ArrayIndex(Sym(7),Const(0)))
TP(Sym(9),SimpleLoop(Const(90),Sym(4),ArrayElem(Block(Sym(8)))))
TP(Sym(11),NumericPlus(Sym(10),Const(2)))
TP(Sym(12),SimpleLoop(Const(100),Sym(10),ArrayElem(Block(Sym(11)))))
TP(Sym(13),ArrayLength(Sym(3)))
TP(Sym(14),Reflect(Print(Sym(13)),Summary(true,true,false,false,false,List(),List(),List(),List()),List()))
TP(Sym(15),ArrayLength(Sym(9)))
TP(Sym(16),Reflect(Print(Sym(15)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(14))))
TP(Sym(17),ArrayLength(Sym(12)))
TP(Sym(18),Reflect(Print(Sym(17)),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(14), Sym(16))))
TP(Sym(19),Reify(Sym(18),Summary(true,true,false,false,false,List(),List(),List(),List()),List(Sym(14), Sym(16), Sym(18))))

-- before transformation
var x3 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x3(x1) = x2
}
val x13 = x3.length
val x14 = println(x13)
var x9 = new Array[Int](90)
for (x4 <- 0 until 90) {
var x7 = new Array[Int](80)
for (x5 <- 0 until 80) {
val x6 = x5 + x4
x7(x5) = x6
}
val x8 = x7.apply(0)
x9(x4) = x8
}
val x15 = x9.length
val x16 = println(x15)
var x12 = new Array[Int](100)
for (x10 <- 0 until 100) {
val x11 = x10 + 2
x12(x10) = x11
}
val x17 = x12.length
val x18 = println(x17)

-- vertical transformation

-- after vertical transformation
var x3 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x3(x1) = x2
}
val x13 = x3.length
val x20 = println(x13)
var x9 = new Array[Int](90)
for (x4 <- 0 until 90) {
var x7 = new Array[Int](80)
for (x5 <- 0 until 80) {
val x6 = x5 + x4
x7(x5) = x6
}
val x8 = x7.apply(0)
x9(x4) = x8
}
val x15 = x9.length
val x21 = println(x15)
var x12 = new Array[Int](100)
for (x10 <- 0 until 100) {
val x11 = x10 + 2
x12(x10) = x11
}
val x17 = x12.length
val x22 = println(x17)

-- horizontal transformation
(HFT)  Recording new loop (prev. Sym(3)): (Const(100),(Sym(3),Sym(1),None))
(HFT)  Recording new loop (prev. Sym(7)): (Const(80),(Sym(7),Sym(5),None))
(HFT)  Recording new loop (prev. Sym(9)): (Const(90),(Sym(9),Sym(4),None))
(HFT)  Loop Sym(12) fused with Sym(3), common index: Sym(1)

-- after horizontal transformation
var x3 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x2 = x1 + 1
x3(x1) = x2
}
val x13 = x3.length
val x20 = println(x13)
var x9 = new Array[Int](90)
for (x4 <- 0 until 90) {
var x7 = new Array[Int](80)
for (x5 <- 0 until 80) {
val x6 = x5 + x4
x7(x5) = x6
}
val x8 = x7.apply(0)
x9(x4) = x8
}
val x15 = x9.length
val x21 = println(x15)
var x25 = new Array[Int](100)
for (x1 <- 0 until 100) {
val x24 = x1 + 2
x25(x1) = x24
}
val x26 = x25.length
val x27 = println(x26)
-- done
